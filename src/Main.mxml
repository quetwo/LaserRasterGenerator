<?xml version="1.0"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
               creationComplete="initApp(event)" backgroundColor="#b4b4b4" pageTitle="GCode Raster Generator">

    <fx:Script>
        <![CDATA[
        import mx.events.FlexEvent;
        import mx.managers.PopUpManager;

        import org.lmn.laserRaster.assets.SpriteSheet;
        import org.lmn.laserRaster.classes.RasterImage;
        import org.lmn.laserRaster.views.ColorCorrectorPopup;
        import org.lmn.laserRaster.views.ResizePopup;

        [Embed(source='org/lmn/laserRaster/assets/glyphicons-halflings.png')]
        protected var glyphBitmap:Class;

        [Bindable]
        protected var myImage:RasterImage = new RasterImage();
        protected var glyphIcons:SpriteSheet = new SpriteSheet(new glyphBitmap(), 24, 24);

        private var _imageContainer:SpriteVisualElement;
        private var inColor:Boolean;

        protected function initApp(event:FlexEvent):void
        {
            btnOpen.setStyle("icon", glyphIcons.drawTile(111));
            btnSave.setStyle("icon", glyphIcons.drawTile(42));
            btnResize.setStyle("icon", glyphIcons.drawTile(92));
            btnCrop.setStyle("icon", glyphIcons.drawTile(82));
            btnColorCorrection.setStyle("icon", glyphIcons.drawTile(59));
            btnColorBW.setStyle("icon", glyphIcons.drawTile(60));
            statusLabel.text = "Ready to load image.";

        }

        private function clearImageContainer():void
        {
            if (_imageContainer != null)
            {
                clearContainer(_imageContainer);
            }
        }

        static private function clearContainer(container:DisplayObjectContainer):void
        {
            while (container.numChildren > 0)
            {
                container.removeChildAt(0);
            }
        }

        protected function btnOpen_clickHandler(event:MouseEvent):void
        {
            clearImageContainer();
            statusLabel.text = "Waiting for image...";
            myImage.addEventListener("RasterImageUpdate", imageLoaded);
            myImage.loadImageFromDisk();
        }


        private function imageLoaded(event:Event):void
        {
            statusLabel.text = "Image Loaded.";
            imageInfoLabel.text = "Image Size: " + myImage.imageWidthInMM + " x " + myImage.imageHeightInMM + " mm";
            showImageOnScreen(myImage.source);
        }

        private function resizedImage(event:Event):void
        {
            statusLabel.text = "Image Re-sized.";
            imageInfoLabel.text = "Image Size: " + myImage.imageWidthInMM + " x " + myImage.imageHeightInMM + " mm";
        }

        private function showImageOnScreen(bitmap:Bitmap):void
        {
            if (_imageContainer == null)
            {
                _imageContainer = new SpriteVisualElement();
            }

            addElementAt(_imageContainer, 0);
            _imageContainer.addChild(bitmap);

            if (bitmap.width > width || bitmap.height > height)
            {
                var hRatio:Number = bitmap.width / width;
                var vRatio:Number = bitmap.height / (height - 72);

                if (hRatio >= vRatio)
                {
                    bitmap.width = width;
                    bitmap.scaleY = bitmap.scaleX;
                }
                else
                {
                    bitmap.height = (height - 72);
                    bitmap.scaleX = bitmap.scaleY;
                }
            }

            // Center the bitmap in the display area
            bitmap.x = (width - bitmap.width) / 2;
            bitmap.y = ((height - bitmap.height - 72) / 2) + 48;
            inColor = false;

            _imageContainer.filters = [myImage.bwFilter];
        }

        protected function btnResize_clickHandler(event:MouseEvent):void
        {
            var resizePopUpWindow:ResizePopup = PopUpManager.createPopUp(this, ResizePopup, true) as ResizePopup;
            resizePopUpWindow.initWindow(myImage);
            resizePopUpWindow.addEventListener("resizeComplete", resizedImage);
            PopUpManager.centerPopUp(resizePopUpWindow);
        }

        private function btnColorBW_clickHandler(event:MouseEvent):void
        {
            if (inColor)
            {
                _imageContainer.filters = [myImage.bwFilter];
                inColor = false;
            }
            else
            {
                _imageContainer.filters = [];
                inColor = true;
            }
        }

        private function btnSave_clickHandler(event:MouseEvent):void
        {
            statusLabel.text = "Exporting Image....";
            myImage.addEventListener("ExportFailed", exportFailed);
            myImage.addEventListener("ExportFinished", exportFinished);
            myImage.exportGCode();
        }

        private function exportFailed(event:Event):void
        {
            statusLabel.text = "Export Failed.  Unable to write file to disk.";
        }

        private function exportFinished(event:Event):void
        {
            statusLabel.text = "Export Completed.";
        }

        private function btnColorCorrection_clickHandler(event:MouseEvent):void
        {
            var ColorCorrectorPopupWindow:ColorCorrectorPopup = PopUpManager.createPopUp(this, ColorCorrectorPopup, false) as ColorCorrectorPopup;
            ColorCorrectorPopupWindow.initWindow(myImage.bwMatrix);
            PopUpManager.centerPopUp(ColorCorrectorPopupWindow);
        }
        ]]>
    </fx:Script>

    <s:layout>
        <s:ConstraintLayout />
    </s:layout>

    <s:SkinnableContainer id="menuBarGroup" top="0" left="0" right="0" height="48" backgroundColor="#575757">
        <s:layout>
            <s:HorizontalLayout paddingLeft="10" paddingRight="10" horizontalAlign="left" verticalAlign="middle" />
        </s:layout>
        <s:Button id="btnOpen" label="Open" iconPlacement="top" click="btnOpen_clickHandler(event)" />
        <s:Button id="btnSave" label="Export GCode" iconPlacement="top" enabled="{myImage.imageLoaded}" click="btnSave_clickHandler(event)"/>
        <s:Spacer width="48" />
        <s:Button id="btnResize" label="Resize" iconPlacement="top" enabled="{myImage.imageLoaded}" click="btnResize_clickHandler(event)" />
        <s:Button id="btnCrop" label="Crop" iconPlacement="top" enabled="{myImage.imageLoaded}" />
        <s:Button id="btnColorCorrection" label="Color Correction" iconPlacement="top" enabled="{myImage.imageLoaded}" click="btnColorCorrection_clickHandler(event)" />
        <s:Spacer width="100%" />
        <s:Button id="btnColorBW" label="Color/BW" iconPlacement="top" enabled="{myImage.imageLoaded}" click="btnColorBW_clickHandler(event)" />
    </s:SkinnableContainer>

    <s:SkinnableContainer id="statusBarGroup" bottom="0" left="0" right="0" height="24" backgroundColor="#575757" color="#ffffff">
        <s:layout>
            <s:HorizontalLayout paddingLeft="10" paddingRight="10" horizontalAlign="left" verticalAlign="middle"/>
        </s:layout>
        <s:Label id="statusLabel" text="" width="100%"/>
        <s:Label id="imageInfoLabel" text="" />
    </s:SkinnableContainer>

    <s:SpriteVisualElement id="imageDisplay" left="0" right="0" top="48" bottom="24" />

</s:Application>
